<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.0"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Atk" version="1.0"/>
  <include name="GLib" version="2.0"/>
  <include name="GModule" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Gdk" version="2.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="2.0"/>
  <include name="Pango" version="1.0"/>
  <include name="Wnck" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <include name="xlib" version="2.0"/>
  <c:include name="libbamf/libbamf.h"/>
  <namespace name="Bamf"
             version="0.2"
             shared-library="libbamf.so.0,libwnck-1.so.22,libgtk-x11-2.0.so.0,libgdk-x11-2.0.so.0,libatk-1.0.so.0,libpangoft2-1.0.so.0,libgdk_pixbuf-2.0.so.0,libm.so.6,libpangocairo-1.0.so.0,libcairo.so.2,libpango-1.0.so.0,libfreetype.so.6,libfontconfig.so.1,libgio-2.0.so.0,libgobject-2.0.so.0,libgmodule-2.0.so.0,libgthread-2.0.so.0,librt.so.1,libglib-2.0.so.0"
             c:prefix="Bamf">
    <class name="Application"
           c:type="BamfApplication"
           parent="View"
           glib:type-name="BamfApplication"
           glib:get-type="bamf_application_get_type"
           glib:type-struct="ApplicationClass">
      <method name="get_application_type"
              c:identifier="bamf_application_get_application_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_desktop_file"
              c:identifier="bamf_application_get_desktop_file"
              doc="Used to fetch the path to the .desktop file associated with the passed application. If
none exists, the result is NULL.">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_windows"
              c:identifier="bamf_application_get_windows"
              doc="Used to fetch all #BamfWindow&apos;s associated with the passed #BamfApplication.">
        <return-value transfer-ownership="container"
                      doc="A list of #BamfWindow&apos;s.">
          <type name="GLib.List" c:type="GList*">
            <type name="Bamf.Window"/>
          </type>
        </return-value>
      </method>
      <method name="get_xids"
              c:identifier="bamf_application_get_xids"
              doc="Used to fetch all #BamfWindow&apos;s xids associated with the passed #BamfApplication.">
        <return-value transfer-ownership="full" doc="An array of xids.">
          <type name="GLib.Array" c:type="GArray*"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="View" c:type="BamfView"/>
      </field>
      <field name="priv">
        <type name="ApplicationPrivate" c:type="BamfApplicationPrivate*"/>
      </field>
      <glib:signal name="window-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="View" c:type="BamfView"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="window-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="View" c:type="BamfView"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ApplicationClass"
            c:type="BamfApplicationClass"
            glib:is-gtype-struct-for="Application">
      <field name="parent_class">
        <type name="ViewClass" c:type="BamfViewClass"/>
      </field>
      <field name="application_padding1">
        <callback name="application_padding1" c:type="_application_padding1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="application_padding2">
        <callback name="application_padding2" c:type="_application_padding2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="application_padding3">
        <callback name="application_padding3" c:type="_application_padding3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="application_padding4">
        <callback name="application_padding4" c:type="_application_padding4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="application_padding5">
        <callback name="application_padding5" c:type="_application_padding5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="application_padding6">
        <callback name="application_padding6" c:type="_application_padding6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ApplicationPrivate" c:type="BamfApplicationPrivate">
    </record>
    <class name="Control"
           c:type="BamfControl"
           parent="GObject.Object"
           glib:type-name="BamfControl"
           glib:get-type="bamf_control_get_type"
           glib:type-struct="ControlClass">
      <function name="get_default" c:identifier="bamf_control_get_default">
        <return-value transfer-ownership="full">
          <type name="Control" c:type="BamfControl*"/>
        </return-value>
      </function>
      <method name="insert_desktop_file"
              c:identifier="bamf_control_insert_desktop_file">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_file" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_application_for_pid"
              c:identifier="bamf_control_register_application_for_pid">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="pid" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_tab_provider"
              c:identifier="bamf_control_register_tab_provider">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ControlPrivate" c:type="BamfControlPrivate*"/>
      </field>
    </class>
    <record name="ControlClass"
            c:type="BamfControlClass"
            glib:is-gtype-struct-for="Control">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="control_padding1">
        <callback name="control_padding1" c:type="_control_padding1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="control_padding2">
        <callback name="control_padding2" c:type="_control_padding2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="control_padding3">
        <callback name="control_padding3" c:type="_control_padding3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="control_padding4">
        <callback name="control_padding4" c:type="_control_padding4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="control_padding5">
        <callback name="control_padding5" c:type="_control_padding5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="control_padding6">
        <callback name="control_padding6" c:type="_control_padding6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ControlPrivate" c:type="BamfControlPrivate">
    </record>
    <class name="Factory"
           c:type="BamfFactory"
           parent="GObject.Object"
           glib:type-name="BamfFactory"
           glib:get-type="bamf_factory_get_type"
           glib:type-struct="FactoryClass">
      <function name="get_default" c:identifier="bamf_factory_get_default">
        <return-value transfer-ownership="full">
          <type name="Factory" c:type="BamfFactory*"/>
        </return-value>
      </function>
      <method name="view_for_path" c:identifier="bamf_factory_view_for_path">
        <return-value transfer-ownership="full">
          <type name="View" c:type="BamfView*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FactoryPrivate" c:type="BamfFactoryPrivate*"/>
      </field>
    </class>
    <record name="FactoryClass"
            c:type="BamfFactoryClass"
            glib:is-gtype-struct-for="Factory">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="FactoryPrivate" c:type="BamfFactoryPrivate">
    </record>
    <callback name="GMarshalFunc_BOOLEAN__STRING_POINTER"
              c:type="GMarshalFunc_BOOLEAN__STRING_POINTER">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="data1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="arg_1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="arg_2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GMarshalFunc_BOXED__STRING"
              c:type="GMarshalFunc_BOXED__STRING">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="data1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="arg_1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GMarshalFunc_BOXED__VOID"
              c:type="GMarshalFunc_BOXED__VOID">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="data1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GMarshalFunc_STRING__STRING"
              c:type="GMarshalFunc_STRING__STRING">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="data1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="arg_1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="GMarshalFunc_UINT__STRING"
              c:type="GMarshalFunc_UINT__STRING">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="data1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="arg_1" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="data2" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Matcher"
           c:type="BamfMatcher"
           parent="GObject.Object"
           glib:type-name="BamfMatcher"
           glib:get-type="bamf_matcher_get_type"
           glib:type-struct="MatcherClass">
      <function name="get_default"
                c:identifier="bamf_matcher_get_default"
                doc="Returns the default matcher. This matcher is owned by bamf and shared between other callers.">
        <return-value transfer-ownership="none" doc="A new #BamfMatcher">
          <type name="Matcher" c:type="BamfMatcher*"/>
        </return-value>
      </function>
      <method name="get_active_application"
              c:identifier="bamf_matcher_get_active_application">
        <return-value transfer-ownership="full">
          <type name="Application" c:type="BamfApplication*"/>
        </return-value>
      </method>
      <method name="get_active_window"
              c:identifier="bamf_matcher_get_active_window">
        <return-value transfer-ownership="full">
          <type name="Window" c:type="BamfWindow*"/>
        </return-value>
      </method>
      <method name="get_application_for_xid"
              c:identifier="bamf_matcher_get_application_for_xid"
              doc="Used to fetch the #BamfApplication containing the passed xid.">
        <return-value transfer-ownership="container"
                      doc="The #BamfApplication representing the xid passed, or NULL if none exists.">
          <type name="Application" c:type="BamfApplication*"/>
        </return-value>
        <parameters>
          <parameter name="xid" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="application_is_running"
              c:identifier="bamf_matcher_application_is_running">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_applications"
              c:identifier="bamf_matcher_get_applications"
              doc="Used to fetch all xid&apos;s associated with an application. Useful for performing window">
        <return-value transfer-ownership="container" doc="A list of xids.">
          <type name="GLib.List" c:type="GList*">
            <type name="uint32"/>
          </type>
        </return-value>
      </method>
      <method name="get_running_applications"
              c:identifier="bamf_matcher_get_running_applications"
              doc="Used to fetch all #BamfApplication&apos;s which are running.">
        <return-value transfer-ownership="container"
                      doc="A list of #BamfApplication&apos;s.">
          <type name="GLib.List" c:type="GList*">
            <type name="Bamf.Application"/>
          </type>
        </return-value>
      </method>
      <method name="get_tabs"
              c:identifier="bamf_matcher_get_tabs"
              doc="Used to fetch all #BamfView&apos;s representing tabs. Currently unused.">
        <return-value transfer-ownership="container"
                      doc="A list of #BamfViews&apos;s.">
          <type name="GLib.List" c:type="GList*">
            <type name="Bamf.View"/>
          </type>
        </return-value>
      </method>
      <method name="get_xids_for_application"
              c:identifier="bamf_matcher_get_xids_for_application">
        <return-value transfer-ownership="full">
          <type name="GLib.Array" c:type="GArray*"/>
        </return-value>
        <parameters>
          <parameter name="application" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MatcherPrivate" c:type="BamfMatcherPrivate*"/>
      </field>
      <glib:signal name="active-application-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="active-window-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="view-closed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="view-opened">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MatcherClass"
            c:type="BamfMatcherClass"
            glib:is-gtype-struct-for="Matcher">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="matcher_padding1">
        <callback name="matcher_padding1" c:type="_matcher_padding1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="matcher_padding2">
        <callback name="matcher_padding2" c:type="_matcher_padding2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="matcher_padding3">
        <callback name="matcher_padding3" c:type="_matcher_padding3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="matcher_padding4">
        <callback name="matcher_padding4" c:type="_matcher_padding4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="matcher_padding5">
        <callback name="matcher_padding5" c:type="_matcher_padding5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="matcher_padding6">
        <callback name="matcher_padding6" c:type="_matcher_padding6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MatcherPrivate" c:type="BamfMatcherPrivate">
    </record>
    <class name="TabSource"
           c:type="BamfTabSource"
           parent="GObject.Object"
           glib:type-name="BamfTabSource"
           glib:get-type="bamf_tab_source_get_type"
           glib:type-struct="TabSourceClass">
      <virtual-method name="show_tab">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="tab_ids">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="tab_preview">
        <return-value transfer-ownership="full">
          <type name="GLib.Array" c:type="GArray*"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="tab_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="tab_xid">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="show_tab" c:identifier="bamf_tab_source_show_tab">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tab_ids" c:identifier="bamf_tab_source_get_tab_ids">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_tab_preview"
              c:identifier="bamf_tab_source_get_tab_preview">
        <return-value transfer-ownership="full">
          <type name="GLib.Array" c:type="GArray*"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tab_uri" c:identifier="bamf_tab_source_get_tab_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tab_xid" c:identifier="bamf_tab_source_get_tab_xid">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="tab_id" transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="id" writable="1" construct="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="TabSourcePrivate" c:type="BamfTabSourcePrivate*"/>
      </field>
      <glib:signal name="tab-closed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="tab-opened">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="tab-uri-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TabSourceClass"
            c:type="BamfTabSourceClass"
            glib:is-gtype-struct-for="TabSource">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="show_tab">
        <callback name="show_tab" c:type="show_tab">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="TabSource" c:type="BamfTabSource*"/>
            </parameter>
            <parameter name="tab_id" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="tab_ids">
        <callback name="tab_ids" c:type="tab_ids">
          <return-value transfer-ownership="full">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="TabSource" c:type="BamfTabSource*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="tab_preview">
        <callback name="tab_preview" c:type="tab_preview">
          <return-value transfer-ownership="full">
            <type name="GLib.Array" c:type="GArray*"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="TabSource" c:type="BamfTabSource*"/>
            </parameter>
            <parameter name="tab_id" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="tab_uri">
        <callback name="tab_uri" c:type="tab_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="TabSource" c:type="BamfTabSource*"/>
            </parameter>
            <parameter name="tab_id" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="tab_xid">
        <callback name="tab_xid" c:type="tab_xid">
          <return-value transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="TabSource" c:type="BamfTabSource*"/>
            </parameter>
            <parameter name="tab_id" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="TabSourcePrivate" c:type="BamfTabSourcePrivate">
    </record>
    <class name="View"
           c:type="BamfView"
           parent="GObject.Object"
           glib:type-name="BamfView"
           glib:get-type="bamf_view_get_type"
           glib:type-struct="ViewClass">
      <virtual-method name="get_children" invoker="get_children">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_active" invoker="is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_running" invoker="is_running">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_urgent" invoker="is_urgent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="view_type">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <method name="get_children"
              c:identifier="bamf_view_get_children"
              doc="freed after usage. Elements of the list are owned by bamf and should not be unreffed.">
        <return-value transfer-ownership="container"
                      doc="Returns a list of #BamfView which must be">
          <type name="GLib.List" c:type="GList*">
            <type name="Bamf.View"/>
          </type>
        </return-value>
      </method>
      <method name="is_active"
              c:identifier="bamf_view_is_active"
              doc="Determines if the view is currently active and focused by the user. Useful for an active window indicator.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_running"
              c:identifier="bamf_view_is_running"
              doc="Determines if the view is currently running. Useful for a running window indicator.">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_urgent" c:identifier="bamf_view_is_urgent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_name"
              c:identifier="bamf_view_get_name"
              doc="Gets the name of a view. This name is a short name best used to represent the view with text.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_icon"
              c:identifier="bamf_view_get_icon"
              doc="Gets the icon of a view. This icon is used to visually represent the view.">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="user_visible" c:identifier="bamf_view_user_visible">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_parent"
              c:identifier="bamf_view_get_parent"
              doc="Returns the current parent of a #BamfView. This parent is not the only parent, simply the primary parent
of a view. It may be possible to find this #BamfView in other parts of the tree.">
        <return-value transfer-ownership="none" doc="Returns a #BamfView.">
          <type name="View" c:type="BamfView*"/>
        </return-value>
      </method>
      <method name="get_view_type"
              c:identifier="bamf_view_get_view_type"
              doc="The view type of a window is a short string used to represent all views of the same class. These
descriptions should not be used to do casting as they are not considered stable.">
        <return-value transfer-ownership="full" doc="A gchar*">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="path" writable="1" construct="1">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ViewPrivate" c:type="BamfViewPrivate*"/>
      </field>
      <glib:signal name="active-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="View" c:type="BamfView"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="View" c:type="BamfView"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="closed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="running-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="urgent-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="user-visible-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ViewClass"
            c:type="BamfViewClass"
            glib:is-gtype-struct-for="View">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_children">
        <callback name="get_children" c:type="get_children">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_active">
        <callback name="is_active" c:type="is_active">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_running">
        <callback name="is_running" c:type="is_running">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_urgent">
        <callback name="is_urgent" c:type="is_urgent">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="view_type">
        <callback name="view_type" c:type="view_type">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="View" c:type="BamfView*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="view_padding1">
        <callback name="view_padding1" c:type="_view_padding1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="view_padding2">
        <callback name="view_padding2" c:type="_view_padding2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="view_padding3">
        <callback name="view_padding3" c:type="_view_padding3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="view_padding4">
        <callback name="view_padding4" c:type="_view_padding4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="view_padding5">
        <callback name="view_padding5" c:type="_view_padding5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="view_padding6">
        <callback name="view_padding6" c:type="_view_padding6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ViewPrivate" c:type="BamfViewPrivate">
    </record>
    <class name="Window"
           c:type="BamfWindow"
           parent="View"
           glib:type-name="BamfWindow"
           glib:get-type="bamf_window_get_type"
           glib:type-struct="WindowClass">
      <method name="get_xid" c:identifier="bamf_window_get_xid">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <field name="parent">
        <type name="View" c:type="BamfView"/>
      </field>
      <field name="priv">
        <type name="WindowPrivate" c:type="BamfWindowPrivate*"/>
      </field>
    </class>
    <record name="WindowClass"
            c:type="BamfWindowClass"
            glib:is-gtype-struct-for="Window">
      <field name="parent_class">
        <type name="ViewClass" c:type="BamfViewClass"/>
      </field>
      <field name="window_padding1">
        <callback name="window_padding1" c:type="_window_padding1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="window_padding2">
        <callback name="window_padding2" c:type="_window_padding2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="window_padding3">
        <callback name="window_padding3" c:type="_window_padding3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="window_padding4">
        <callback name="window_padding4" c:type="_window_padding4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="window_padding5">
        <callback name="window_padding5" c:type="_window_padding5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="window_padding6">
        <callback name="window_padding6" c:type="_window_padding6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="WindowPrivate" c:type="BamfWindowPrivate">
    </record>
    <function name="dbus_glib_marshal_bamf_tab_source_BOOLEAN__STRING_POINTER"
              c:identifier="dbus_glib_marshal_bamf_tab_source_BOOLEAN__STRING_POINTER">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_glib_marshal_bamf_tab_source_BOXED__STRING"
              c:identifier="dbus_glib_marshal_bamf_tab_source_BOXED__STRING">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_glib_marshal_bamf_tab_source_BOXED__VOID"
              c:identifier="dbus_glib_marshal_bamf_tab_source_BOXED__VOID">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_glib_marshal_bamf_tab_source_STRING__STRING"
              c:identifier="dbus_glib_marshal_bamf_tab_source_STRING__STRING">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_glib_marshal_bamf_tab_source_UINT__STRING"
              c:identifier="dbus_glib_marshal_bamf_tab_source_UINT__STRING">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="invocation_hint" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
