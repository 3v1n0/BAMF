/*
 * Generated by gdbus-codegen 2.32.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __BAMF_GDBUS_INDICATOR_SOURCE_GENERATED_H__
#define __BAMF_GDBUS_INDICATOR_SOURCE_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.canonical.StatusNotifierApprover */

#define STATUS_NOTIFIER_APPROVER_TYPE_ (status_notifier_approver__get_type ())
#define STATUS_NOTIFIER_APPROVER_(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), STATUS_NOTIFIER_APPROVER_TYPE_, StatusNotifierApprover))
#define STATUS_NOTIFIER_APPROVER_IS_(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), STATUS_NOTIFIER_APPROVER_TYPE_))
#define STATUS_NOTIFIER_APPROVER__GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), STATUS_NOTIFIER_APPROVER_TYPE_, StatusNotifierApproverIface))

struct _StatusNotifierApprover;
typedef struct _StatusNotifierApprover StatusNotifierApprover;
typedef struct _StatusNotifierApproverIface StatusNotifierApproverIface;

struct _StatusNotifierApproverIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_approve_item) (
    StatusNotifierApprover *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_id,
    const gchar *arg_category,
    guint arg_pid,
    const gchar *arg_address,
    const gchar *arg_path);

  void (*revise_judgement) (
    StatusNotifierApprover *object,
    gboolean arg_approved,
    const gchar *arg_address,
    const gchar *arg_path);

};

GType status_notifier_approver__get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *status_notifier_approver__interface_info (void);
guint status_notifier_approver__override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void status_notifier_approver__complete_approve_item (
    StatusNotifierApprover *object,
    GDBusMethodInvocation *invocation,
    gboolean approved);



/* D-Bus signal emissions functions: */
void status_notifier_approver__emit_revise_judgement (
    StatusNotifierApprover *object,
    gboolean arg_approved,
    const gchar *arg_address,
    const gchar *arg_path);



/* D-Bus method calls: */
void status_notifier_approver__call_approve_item (
    StatusNotifierApprover *proxy,
    const gchar *arg_id,
    const gchar *arg_category,
    guint arg_pid,
    const gchar *arg_address,
    const gchar *arg_path,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean status_notifier_approver__call_approve_item_finish (
    StatusNotifierApprover *proxy,
    gboolean *out_approved,
    GAsyncResult *res,
    GError **error);

gboolean status_notifier_approver__call_approve_item_sync (
    StatusNotifierApprover *proxy,
    const gchar *arg_id,
    const gchar *arg_category,
    guint arg_pid,
    const gchar *arg_address,
    const gchar *arg_path,
    gboolean *out_approved,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define STATUS_NOTIFIER_APPROVER_TYPE__PROXY (status_notifier_approver__proxy_get_type ())
#define STATUS_NOTIFIER_APPROVER__PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), STATUS_NOTIFIER_APPROVER_TYPE__PROXY, StatusNotifierApproverProxy))
#define STATUS_NOTIFIER_APPROVER__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), STATUS_NOTIFIER_APPROVER_TYPE__PROXY, StatusNotifierApproverProxyClass))
#define STATUS_NOTIFIER_APPROVER__PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), STATUS_NOTIFIER_APPROVER_TYPE__PROXY, StatusNotifierApproverProxyClass))
#define STATUS_NOTIFIER_APPROVER_IS__PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), STATUS_NOTIFIER_APPROVER_TYPE__PROXY))
#define STATUS_NOTIFIER_APPROVER_IS__PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), STATUS_NOTIFIER_APPROVER_TYPE__PROXY))

typedef struct _StatusNotifierApproverProxy StatusNotifierApproverProxy;
typedef struct _StatusNotifierApproverProxyClass StatusNotifierApproverProxyClass;
typedef struct _StatusNotifierApproverProxyPrivate StatusNotifierApproverProxyPrivate;

struct _StatusNotifierApproverProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  StatusNotifierApproverProxyPrivate *priv;
};

struct _StatusNotifierApproverProxyClass
{
  GDBusProxyClass parent_class;
};

GType status_notifier_approver__proxy_get_type (void) G_GNUC_CONST;

void status_notifier_approver__proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
StatusNotifierApprover *status_notifier_approver__proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
StatusNotifierApprover *status_notifier_approver__proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void status_notifier_approver__proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
StatusNotifierApprover *status_notifier_approver__proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
StatusNotifierApprover *status_notifier_approver__proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define STATUS_NOTIFIER_APPROVER_TYPE__SKELETON (status_notifier_approver__skeleton_get_type ())
#define STATUS_NOTIFIER_APPROVER__SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), STATUS_NOTIFIER_APPROVER_TYPE__SKELETON, StatusNotifierApproverSkeleton))
#define STATUS_NOTIFIER_APPROVER__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), STATUS_NOTIFIER_APPROVER_TYPE__SKELETON, StatusNotifierApproverSkeletonClass))
#define STATUS_NOTIFIER_APPROVER__SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), STATUS_NOTIFIER_APPROVER_TYPE__SKELETON, StatusNotifierApproverSkeletonClass))
#define STATUS_NOTIFIER_APPROVER_IS__SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), STATUS_NOTIFIER_APPROVER_TYPE__SKELETON))
#define STATUS_NOTIFIER_APPROVER_IS__SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), STATUS_NOTIFIER_APPROVER_TYPE__SKELETON))

typedef struct _StatusNotifierApproverSkeleton StatusNotifierApproverSkeleton;
typedef struct _StatusNotifierApproverSkeletonClass StatusNotifierApproverSkeletonClass;
typedef struct _StatusNotifierApproverSkeletonPrivate StatusNotifierApproverSkeletonPrivate;

struct _StatusNotifierApproverSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  StatusNotifierApproverSkeletonPrivate *priv;
};

struct _StatusNotifierApproverSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType status_notifier_approver__skeleton_get_type (void) G_GNUC_CONST;

StatusNotifierApprover *status_notifier_approver__skeleton_new (void);


G_END_DECLS

#endif /* __BAMF_GDBUS_INDICATOR_SOURCE_GENERATED_H__ */
